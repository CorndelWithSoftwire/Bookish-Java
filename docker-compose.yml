version: '3.1'
services:
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=rootpw"
      - "MYSQL_ROOT_HOST=%"
      - "MYSQL_USER=docker"
      - "MYSQL_PASSWORD=docker"
    ports:
      - "3306:3306"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  populate:
    build: setup_db
    image: populate

  webapp:
    build: Bookish-Frontend
    image: webapp
    volumes:
      - ~/Work/CorndelBootcamp/Bookish-Frontend/dist:/usr/share/nginx/html
    ports:
      - "5000:80"

  spring-api:
    build: .
    image: spring-api
    ports:
      - "6060:8080"
    environment:
      - "SQL_UNAME=root"
      - "SQL_PASS=rootpw"
      - "SQL_DB=bookish"
      - "SQL_HOST=db"

  elasticsearch:
    image: elasticsearch/elasticsearch:7.10.2-amd64
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    image: kibana/kibana-oss:7.10.2
    environment:
      - "ELASTICSEARCH_URL=elasticsearch:9200"
      - "SERVER_NAME=127.0.0.1"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    volumes:
      - ./volumes/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./volumes/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
    build:
      context: .
      dockerfile: Dockerfile-logstash
    depends_on:
      - db
      - elasticsearch